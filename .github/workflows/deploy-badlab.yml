name: Build & Deploy BadLab

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "infra/**"
      - "layers/**"
      - "lambda/**"
      - ".github/workflows/deploy-badlab.yml"

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  STACK_NAME: ${{ vars.STACK_NAME }}
  ARTIFACT_BUCKET: ${{ vars.ARTIFACT_BUCKET }}
  PUBLIC_BUCKET_NAME: ${{ vars.PUBLIC_BUCKET_NAME }}

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Set up job
        run: echo "startingâ€¦"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Show repo tree
        run: |
          echo "::group::tree"
          sudo apt-get update -y >/dev/null 2>&1 || true
          sudo apt-get install -y tree >/dev/null 2>&1 || true
          tree -a -I '.git' -L 3
          echo "::endgroup::"

      # ---- Build the vulnerable LAMBDA LAYER zip ----
      - name: Build vulnerable layer
        run: bash layers/vuln-py39/build.sh

      - name: Upload layer to S3 (capture VersionId)
        id: upload_layer
        run: |
          set -euo pipefail
          aws s3api put-object \
            --bucket "$ARTIFACT_BUCKET" \
            --key "layers/vuln-py39-layer.zip" \
            --body "layers/vuln-py39/layer.zip" \
            --output text --query VersionId > /tmp/layer_version.txt || echo "" > /tmp/layer_version.txt
          echo "LAYER_VERSION_ID=$(cat /tmp/layer_version.txt)" >> $GITHUB_ENV
          echo "Uploaded layer VersionId: $(cat /tmp/layer_version.txt || true)"

      # ---- Build the FUNCTION zip with vulnerable requirements.txt ----
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build function ZIP (with vulnerable deps)
        working-directory: layers/vuln-py39/lambda/hello
        run: |
          set -euo pipefail
          rm -rf build hello.zip
          mkdir -p build
          cp index.py build/
          python -m pip install --upgrade pip
          pip install -r requirements.txt -t build/
          cd build && zip -qr ../hello.zip .

      - name: Upload function ZIP to S3 (capture VersionId)
        id: upload_fn
        working-directory: lambda/hello
        run: |
          set -euo pipefail
          aws s3api put-object \
            --bucket "$ARTIFACT_BUCKET" \
            --key "lambda/hello.zip" \
            --body "hello.zip" \
            --output text --query VersionId > /tmp/lambda_version.txt || echo "" > /tmp/lambda_version.txt
          echo "LAMBDA_ZIP_KEY=lambda/hello.zip" >> $GITHUB_ENV
          echo "LAMBDA_ZIP_VERSION_ID=$(cat /tmp/lambda_version.txt)" >> $GITHUB_ENV
          echo "Uploaded function ZIP VersionId: $(cat /tmp/lambda_version.txt || true)"

      # ---- Deploy CFN ----
      - name: Deploy CloudFormation
        run: |
          set -euo pipefail
          aws cloudformation deploy \
            --stack-name "$STACK_NAME" \
            --template-file infra/plerion-badlab.yaml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              PublicBucketName="$PUBLIC_BUCKET_NAME" \
              ArtifactBucket="$ARTIFACT_BUCKET" \
              VulnLayerKey="layers/vuln-py39-layer.zip" \
              LambdaZipKey="$LAMBDA_ZIP_KEY" \
              LambdaZipVersionId="$LAMBDA_ZIP_VERSION_ID" \
              LambdaRuntime="python3.9" \
              ApiStageName="prod"

      - name: Show stack outputs
        run: |
          aws cloudformation describe-stacks \
            --stack-name "$STACK_NAME" \
            --query 'Stacks[0].Outputs[*].{OutputKey:OutputKey,Value:OutputValue}' \
            --output table
