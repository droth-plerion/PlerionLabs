name: Build & Deploy BadLab

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  ARTIFACT_BUCKET: ${{ vars.ARTIFACT_BUCKET }}
  STACK_NAME: ${{ vars.STACK_NAME }}
  PUBLIC_BUCKET_NAME: ${{ vars.PUBLIC_BUCKET_NAME }}

concurrency:
  group: badlab-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Show repo tree
        shell: bash
        run: |
          pwd
          git rev-parse --short HEAD
          tree -a -I '.git' || (echo "(no tree)"; ls -laR | head -n 200)

      - name: Build vulnerable layer
        shell: bash
        run: |
          bash layers/vuln-py39/build.sh

      - name: Upload layer to S3 (capture ETag & VersionId)
        id: put
        shell: bash
        run: |
          set -euo pipefail
          resp=$(aws s3api put-object \
            --bucket "$ARTIFACT_BUCKET" \
            --key "layers/vuln-py39-layer.zip" \
            --body "layers/vuln-py39/build/vuln-py39-layer.zip")

          echo "$resp"
          etag=$(printf '%s' "$resp" | jq -r '.ETag' | tr -d '"')
          version=$(printf '%s' "$resp" | jq -r '.VersionId // empty')

          echo "etag=$etag" >> "$GITHUB_OUTPUT"
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "Uploaded layer: ETag=$etag  VersionId=${version:-none}"

      - name: Deploy CloudFormation
        shell: bash
        run: |
          set -euo pipefail
          aws cloudformation deploy \
            --stack-name "$STACK_NAME" \
            --template-file infra/plerion-badlab.yaml \
            --region "$AWS_REGION" \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              ArtifactBucket="$ARTIFACT_BUCKET" \
              VulnLayerKey="layers/vuln-py39-layer.zip" \
              PublicBucketName="$PUBLIC_BUCKET_NAME" \
              LayerS3Key="layers/vuln-py39-layer.zip" \
              LayerContentHash="${{ steps.put.outputs.etag }}" \
              LayerObjectVersion="${{ steps.put.outputs.version }}"

      - name: Show stack outputs
        shell: bash
        run: |
          aws cloudformation describe-stacks --stack-name "$STACK_NAME" \
            --query "Stacks[0].Outputs" --output table
