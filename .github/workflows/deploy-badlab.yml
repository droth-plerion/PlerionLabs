name: Build & Deploy BadLab

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  ARTIFACT_BUCKET: ${{ vars.ARTIFACT_BUCKET }}
  STACK_NAME: ${{ vars.STACK_NAME }}
  PUBLIC_BUCKET_NAME: ${{ vars.PUBLIC_BUCKET_NAME }}

concurrency:
  group: badlab-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Show repo tree
        run: |
          pwd
          ls -la
          ls -la infra
          ls -la layers/vuln-py39

      - name: Build vulnerable layer
        run: |
          bash layers/vuln-py39/build.sh

      - name: Upload layer to S3 (capture ETag & VersionId)
        id: put
        shell: bash
        run: |
          RESP=$(aws s3api put-object \
            --bucket "${{ env.ARTIFACT_BUCKET }}" \
            --key "layers/vuln-py39-layer.zip" \
            --body "layers/vuln-py39/build/vuln-py39-layer.zip")

          ETAG=$(echo "$RESP" | jq -r '.ETag' | tr -d '"')
          VERSION=$(echo "$RESP" | jq -r '.VersionId // empty')

          echo "etag=$ETAG" >> "$GITHUB_OUTPUT"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Uploaded layer with ETag=$ETAG VersionId=${VERSION:-none}"

      # ---- FIXED: generate fake secrets without pipes (no SIGPIPE) ----
      - name: Generate fake leaked secrets
        id: gen
        shell: bash
        run: |
          python - <<'PY'
          import os, random, string
          out = os.environ["GITHUB_OUTPUT"]
          rng = random.SystemRandom()
          def rand(chars, n): return ''.join(rng.choice(chars) for _ in range(n))
          aki = 'AKIA' + rand('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789', 16)
          sec = rand('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789/+=', 40)
          stripe = 'sk_live_' + rand(string.ascii_letters + string.digits, 32)
          with open(out, 'a') as f:
              f.write(f"aki={aki}\n")
              f.write(f"sec={sec}\n")
              f.write(f"stripe={stripe}\n")
          PY
          echo "Generated AKI=${{ steps.gen.outputs.aki || 'set below' }}"

      - name: Deploy CloudFormation
        run: |
          aws cloudformation deploy \
            --stack-name ${{ env.STACK_NAME }} \
            --template-file infra/plerion-badlab.yaml \
            --region ${{ env.AWS_REGION }} \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              ArtifactBucket=${{ env.ARTIFACT_BUCKET }} \
              VulnLayerKey=layers/vuln-py39-layer.zip \
              PublicBucketName=${{ env.PUBLIC_BUCKET_NAME }} \
              LayerS3Key=layers/vuln-py39-layer.zip \
              LayerContentHash=${{ steps.put.outputs.etag }} \
              LayerObjectVersion=${{ steps.put.outputs.version }} \
              LeakedAwsAccessKeyId=${{ steps.gen.outputs.aki }} \
              LeakedAwsSecretAccessKey=${{ steps.gen.outputs.sec }} \
              StripeLiveSecret=${{ steps.gen.outputs.stripe }}
